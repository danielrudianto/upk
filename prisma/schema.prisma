generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model payment_method {
  id                Int                 @id @default(autoincrement())
  name              String              @unique(map: "name_UNIQUE") @db.VarChar(100)
  is_delete         Boolean?            @default(false)
  logo              String?             @db.VarChar(100)
  user_subscription user_subscription[]
  user_transaction  user_transaction[]
}

model post {
  id           Int            @id @default(autoincrement())
  created_by   Int
  created_at   DateTime       @default(now()) @db.DateTime(0)
  caption      String?        @db.Text
  uid          String         @unique(map: "uid_UNIQUE") @db.VarChar(45)
  is_delete    Boolean        @default(false)
  deleted_at   DateTime?      @db.DateTime(0)
  user         user           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_1")
  post_comment post_comment[]
  post_media   post_media[]
  reaction     reaction[]

  @@index([created_by], map: "post_ibfk_1_idx")
}

model post_comment {
  id         Int        @id @default(autoincrement())
  comment    String     @db.Text
  created_by Int
  created_at DateTime   @default(now()) @db.DateTime(0)
  post_id    Int?
  deleted_at DateTime?  @db.DateTime(0)
  is_delete  Boolean?   @default(false)
  user       user       @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_comment_ibfk_2")
  post       post?      @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_comment_ibfk_1")
  reaction   reaction[]

  @@index([post_id], map: "post_comment_ibfk_1_idx")
  @@index([created_by], map: "post_comment_ibfk_2_idx")
}

model user {
  id                                                Int                 @id @default(autoincrement())
  name                                              String              @db.VarChar(100)
  phone_number                                      String              @unique(map: "phone_number_UNIQUE") @db.VarChar(100)
  nik                                               String              @unique(map: "nik_UNIQUE") @db.VarChar(18)
  password                                          String              @db.VarChar(100)
  created_at                                        DateTime            @default(now()) @db.DateTime(0)
  updated_at                                        DateTime?           @db.DateTime(0)
  district_id                                       Int
  uid                                               String              @unique(map: "uid_UNIQUE") @db.VarChar(45)
  profile_image_url                                 String?             @db.VarChar(100)
  gender                                            String?             @db.VarChar(1)
  district                                          district            @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  post                                              post[]
  post_comment                                      post_comment[]
  reaction                                          reaction[]
  user_management_userTouser_management_approved_by user_management[]   @relation("userTouser_management_approved_by")
  user_management_userTouser_management_user_id     user_management[]   @relation("userTouser_management_user_id")
  user_subscription                                 user_subscription[]
  user_token                                        user_token[]
  user_transaction                                  user_transaction[]

  @@index([district_id], map: "user_ibfk_1")
}

model user_subscription {
  id                                               Int            @id @default(autoincrement())
  price                                            Decimal        @default(0.00) @db.Decimal(12, 2)
  membership                                       Decimal        @default(0.00) @db.Decimal(12, 2)
  service                                          Decimal        @default(0.00) @db.Decimal(12, 2)
  created_by                                       Int
  created_at                                       DateTime       @default(now()) @db.DateTime(0)
  valid_from                                       DateTime?      @db.Date
  valid_until                                      DateTime?      @db.Date
  is_paid                                          Boolean        @default(false)
  paid_at                                          DateTime?      @db.DateTime(0)
  payment_id                                       String?        @db.VarChar(100)
  payment_method                                   Int
  user                                             user           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_subscription_ibfk_1")
  payment_method_payment_methodTouser_subscription payment_method @relation(fields: [payment_method], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_subscription_ibfk_2")

  @@index([created_by], map: "user_subscription_ibfk_1_idx")
  @@index([payment_method], map: "user_subscription_ibfk_2_idx")
}

model user_token {
  id      Int    @id @default(autoincrement())
  user_id Int
  token   String @unique(map: "token_UNIQUE") @db.VarChar(100)
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_token_ibfk_1")

  @@index([user_id], map: "user_token_ibfk_1_idx")
}

model user_transaction {
  id                        Int            @id @default(autoincrement())
  created_by                Int
  created_at                DateTime?      @default(now()) @db.DateTime(0)
  value                     Decimal        @db.Decimal(12, 2)
  service                   Decimal        @db.Decimal(12, 2)
  discount                  Decimal        @db.Decimal(12, 2)
  product_code_name         String         @db.VarChar(50)
  purchase_reference        String         @db.VarChar(100)
  purchase_number_reference String?        @db.VarChar(50)
  payment_method_id         Int
  is_paid                   Boolean?       @default(false)
  is_delete                 Boolean?       @default(false)
  branch_transaction        Boolean?       @default(false)
  paid_at                   DateTime?      @db.DateTime(0)
  payment_reference         String?        @unique(map: "payment_reference_UNIQUE") @db.VarChar(50)
  note                      String?        @db.VarChar(200)
  user                      user           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_transaction_ibfk_1")
  payment_method            payment_method @relation(fields: [payment_method_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_transaction_ibfk_3")

  @@index([created_by], map: "user_transaction_ibfk_1_idx")
  @@index([payment_method_id], map: "user_transaction_ibfk_3_idx")
  @@index([note, purchase_reference], map: "user_transaction_fulltext")
}

model district {
  id              Int               @id @default(autoincrement())
  provinsi_id     String            @db.VarChar(2)
  kota_id         String?           @db.VarChar(2)
  kecamatan_id    String?           @db.VarChar(2)
  kelurahan_id    String?           @db.VarChar(4)
  name            String            @db.VarChar(100)
  user            user[]
  user_management user_management[]

  @@index([name], map: "district_fulltext")
  @@index([provinsi_id, kota_id, kecamatan_id, kelurahan_id], map: "district_index")
}

model post_media {
  id      Int     @id @default(autoincrement())
  post_id Int
  url     String  @unique(map: "url_UNIQUE") @db.VarChar(500)
  name    String? @db.VarChar(500)
  post    post    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_media_ibfk_1")

  @@index([post_id], map: "post_media_ibfk_1_idx")
}

model reaction {
  id           Int           @id @default(autoincrement())
  post_id      Int?
  comment_id   Int?
  reaction     Int
  created_by   Int?
  created_at   DateTime?     @default(now()) @db.DateTime(0)
  is_delete    Boolean?      @default(false)
  deleted_at   DateTime?     @db.DateTime(0)
  post_comment post_comment? @relation(fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reaction_ibfk_1")
  user         user?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reaction_ibfk_3")
  post         post?         @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reaction_ibfk_2")

  @@index([comment_id], map: "reaction_ibfk_1_idx")
  @@index([post_id], map: "reaction_ibfk_2_idx")
  @@index([created_by], map: "reaction_ibfk_3_idx")
}

model subscription_price {
  id             Int       @id @default(autoincrement())
  price          Decimal?  @db.Decimal(12, 4)
  membership     Decimal   @db.Decimal(12, 4)
  service        Decimal   @db.Decimal(12, 4)
  effective_date DateTime? @db.Date
}

model user_management {
  id                                     Int       @id @default(autoincrement())
  user_id                                Int
  management_level                       Int
  district_id                            Int
  created_at                             DateTime  @default(now()) @db.DateTime(0)
  is_approved                            Boolean   @default(false)
  approved_by                            Int?
  approved_at                            DateTime? @db.DateTime(0)
  user_userTouser_management_approved_by user?     @relation("userTouser_management_approved_by", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_management_ibfk_2")
  district                               district  @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_management_ibfk_3")
  user_userTouser_management_user_id     user      @relation("userTouser_management_user_id", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_management_ibfk_1")

  @@index([user_id], map: "user_management_ibfk_1_idx")
  @@index([approved_by], map: "user_management_ibfk_2_idx")
  @@index([district_id], map: "user_management_ibfk_3_idx")
}
